{"version":3,"sources":["dom7.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["/**\r\n * Dom7 2.1.3\r\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\r\n * http://framework7.io/docs/dom.html\r\n *\r\n * Copyright 2019, Vladimir Kharlampidi\r\n * The iDangero.us\r\n * http://www.idangero.us/\r\n *\r\n * Licensed under MIT\r\n *\r\n * Released on: February 11, 2019\r\n */\r\n(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n  typeof define === 'function' && define.amd ? define(factory) :\r\n  (global = global || self, global.Dom7 = factory());\r\n}(this, function () { \r\n\r\n  /**\r\n   * SSR Window 1.0.1\r\n   * Better handling for window object in SSR environment\r\n   * https://github.com/nolimits4web/ssr-window\r\n   *\r\n   * Copyright 2018, Vladimir Kharlampidi\r\n   *\r\n   * Licensed under MIT\r\n   *\r\n   * Released on: July 18, 2018\r\n   */\r\n  var doc = (typeof document === 'undefined') ? {\r\n    body: {},\r\n    addEventListener: function addEventListener() {},\r\n    removeEventListener: function removeEventListener() {},\r\n    activeElement: {\r\n      blur: function blur() {},\r\n      nodeName: '',\r\n    },\r\n    querySelector: function querySelector() {\r\n      return null;\r\n    },\r\n    querySelectorAll: function querySelectorAll() {\r\n      return [];\r\n    },\r\n    getElementById: function getElementById() {\r\n      return null;\r\n    },\r\n    createEvent: function createEvent() {\r\n      return {\r\n        initEvent: function initEvent() {},\r\n      };\r\n    },\r\n    createElement: function createElement() {\r\n      return {\r\n        children: [],\r\n        childNodes: [],\r\n        style: {},\r\n        setAttribute: function setAttribute() {},\r\n        getElementsByTagName: function getElementsByTagName() {\r\n          return [];\r\n        },\r\n      };\r\n    },\r\n    location: { hash: '' },\r\n  } : document; // eslint-disable-line\r\n\r\n  var win = (typeof window === 'undefined') ? {\r\n    document: doc,\r\n    navigator: {\r\n      userAgent: '',\r\n    },\r\n    location: {},\r\n    history: {},\r\n    CustomEvent: function CustomEvent() {\r\n      return this;\r\n    },\r\n    addEventListener: function addEventListener() {},\r\n    removeEventListener: function removeEventListener() {},\r\n    getComputedStyle: function getComputedStyle() {\r\n      return {\r\n        getPropertyValue: function getPropertyValue() {\r\n          return '';\r\n        },\r\n      };\r\n    },\r\n    Image: function Image() {},\r\n    Date: function Date() {},\r\n    screen: {},\r\n    setTimeout: function setTimeout() {},\r\n    clearTimeout: function clearTimeout() {},\r\n  } : window; // eslint-disable-line\r\n\r\n  var Dom7 = function Dom7(arr) {\r\n    var self = this;\r\n    // Create array-like object\r\n    for (var i = 0; i < arr.length; i += 1) {\r\n      self[i] = arr[i];\r\n    }\r\n    self.length = arr.length;\r\n    // Return collection with methods\r\n    return this;\r\n  };\r\n\r\n  function $(selector, context) {\r\n    var arr = [];\r\n    var i = 0;\r\n    if (selector && !context) {\r\n      if (selector instanceof Dom7) {\r\n        return selector;\r\n      }\r\n    }\r\n    if (selector) {\r\n        // String\r\n      if (typeof selector === 'string') {\r\n        var els;\r\n        var tempParent;\r\n        var html = selector.trim();\r\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\r\n          var toCreate = 'div';\r\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\r\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\r\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\r\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\r\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\r\n          tempParent = doc.createElement(toCreate);\r\n          tempParent.innerHTML = html;\r\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\r\n            arr.push(tempParent.childNodes[i]);\r\n          }\r\n        } else {\r\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\r\n            // Pure ID selector\r\n            els = [doc.getElementById(selector.trim().split('#')[1])];\r\n          } else {\r\n            // Other selectors\r\n            els = (context || doc).querySelectorAll(selector.trim());\r\n          }\r\n          for (i = 0; i < els.length; i += 1) {\r\n            if (els[i]) { arr.push(els[i]); }\r\n          }\r\n        }\r\n      } else if (selector.nodeType || selector === win || selector === doc) {\r\n        // Node/element\r\n        arr.push(selector);\r\n      } else if (selector.length > 0 && selector[0].nodeType) {\r\n        // Array of elements or instance of Dom\r\n        for (i = 0; i < selector.length; i += 1) {\r\n          arr.push(selector[i]);\r\n        }\r\n      }\r\n    }\r\n    return new Dom7(arr);\r\n  }\r\n\r\n  $.fn = Dom7.prototype;\r\n  $.Class = Dom7;\r\n  $.Dom7 = Dom7;\r\n\r\n  function unique(arr) {\r\n    var uniqueArray = [];\r\n    for (var i = 0; i < arr.length; i += 1) {\r\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\r\n    }\r\n    return uniqueArray;\r\n  }\r\n  function toCamelCase(string) {\r\n    return string.toLowerCase().replace(/-(.)/g, function (match, group1) { return group1.toUpperCase(); });\r\n  }\r\n\r\n  function requestAnimationFrame(callback) {\r\n    if (win.requestAnimationFrame) { return win.requestAnimationFrame(callback); }\r\n    else if (win.webkitRequestAnimationFrame) { return win.webkitRequestAnimationFrame(callback); }\r\n    return win.setTimeout(callback, 1000 / 60);\r\n  }\r\n  function cancelAnimationFrame(id) {\r\n    if (win.cancelAnimationFrame) { return win.cancelAnimationFrame(id); }\r\n    else if (win.webkitCancelAnimationFrame) { return win.webkitCancelAnimationFrame(id); }\r\n    return win.clearTimeout(id);\r\n  }\r\n\r\n  // Classes and attributes\r\n  function addClass(className) {\r\n    if (typeof className === 'undefined') {\r\n      return this;\r\n    }\r\n    var classes = className.split(' ');\r\n    for (var i = 0; i < classes.length; i += 1) {\r\n      for (var j = 0; j < this.length; j += 1) {\r\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.add(classes[i]); }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  function removeClass(className) {\r\n    var classes = className.split(' ');\r\n    for (var i = 0; i < classes.length; i += 1) {\r\n      for (var j = 0; j < this.length; j += 1) {\r\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.remove(classes[i]); }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  function hasClass(className) {\r\n    if (!this[0]) { return false; }\r\n    return this[0].classList.contains(className);\r\n  }\r\n  function toggleClass(className) {\r\n    var classes = className.split(' ');\r\n    for (var i = 0; i < classes.length; i += 1) {\r\n      for (var j = 0; j < this.length; j += 1) {\r\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.toggle(classes[i]); }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  function attr(attrs, value) {\r\n    var arguments$1 = arguments;\r\n\r\n    if (arguments.length === 1 && typeof attrs === 'string') {\r\n      // Get attr\r\n      if (this[0]) { return this[0].getAttribute(attrs); }\r\n      return undefined;\r\n    }\r\n\r\n    // Set attrs\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      if (arguments$1.length === 2) {\r\n        // String\r\n        this[i].setAttribute(attrs, value);\r\n      } else {\r\n        // Object\r\n        // eslint-disable-next-line\r\n        for (var attrName in attrs) {\r\n          this[i][attrName] = attrs[attrName];\r\n          this[i].setAttribute(attrName, attrs[attrName]);\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  // eslint-disable-next-line\r\n  function removeAttr(attr) {\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      this[i].removeAttribute(attr);\r\n    }\r\n    return this;\r\n  }\r\n  // eslint-disable-next-line\r\n  function prop(props, value) {\r\n    var arguments$1 = arguments;\r\n\r\n    if (arguments.length === 1 && typeof props === 'string') {\r\n      // Get prop\r\n      if (this[0]) { return this[0][props]; }\r\n    } else {\r\n      // Set props\r\n      for (var i = 0; i < this.length; i += 1) {\r\n        if (arguments$1.length === 2) {\r\n          // String\r\n          this[i][props] = value;\r\n        } else {\r\n          // Object\r\n          // eslint-disable-next-line\r\n          for (var propName in props) {\r\n            this[i][propName] = props[propName];\r\n          }\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n  }\r\n  function data(key, value) {\r\n    var el;\r\n    if (typeof value === 'undefined') {\r\n      el = this[0];\r\n      // Get value\r\n      if (el) {\r\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\r\n          return el.dom7ElementDataStorage[key];\r\n        }\r\n\r\n        var dataKey = el.getAttribute((\"data-\" + key));\r\n        if (dataKey) {\r\n          return dataKey;\r\n        }\r\n        return undefined;\r\n      }\r\n      return undefined;\r\n    }\r\n\r\n    // Set value\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      el = this[i];\r\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\r\n      el.dom7ElementDataStorage[key] = value;\r\n    }\r\n    return this;\r\n  }\r\n  function removeData(key) {\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      var el = this[i];\r\n      if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\r\n        el.dom7ElementDataStorage[key] = null;\r\n        delete el.dom7ElementDataStorage[key];\r\n      }\r\n    }\r\n  }\r\n  function dataset() {\r\n    var el = this[0];\r\n    if (!el) { return undefined; }\r\n    var dataset = {}; // eslint-disable-line\r\n    if (el.dataset) {\r\n      // eslint-disable-next-line\r\n      for (var dataKey in el.dataset) {\r\n        dataset[dataKey] = el.dataset[dataKey];\r\n      }\r\n    } else {\r\n      for (var i = 0; i < el.attributes.length; i += 1) {\r\n        // eslint-disable-next-line\r\n        var attr = el.attributes[i];\r\n        if (attr.name.indexOf('data-') >= 0) {\r\n          dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n    for (var key in dataset) {\r\n      if (dataset[key] === 'false') { dataset[key] = false; }\r\n      else if (dataset[key] === 'true') { dataset[key] = true; }\r\n      else if (parseFloat(dataset[key]) === dataset[key] * 1) { dataset[key] *= 1; }\r\n    }\r\n    return dataset;\r\n  }\r\n  function val(value) {\r\n    var dom = this;\r\n    if (typeof value === 'undefined') {\r\n      if (dom[0]) {\r\n        if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\r\n          var values = [];\r\n          for (var i = 0; i < dom[0].selectedOptions.length; i += 1) {\r\n            values.push(dom[0].selectedOptions[i].value);\r\n          }\r\n          return values;\r\n        }\r\n        return dom[0].value;\r\n      }\r\n      return undefined;\r\n    }\r\n\r\n    for (var i$1 = 0; i$1 < dom.length; i$1 += 1) {\r\n      var el = dom[i$1];\r\n      if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\r\n        for (var j = 0; j < el.options.length; j += 1) {\r\n          el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\r\n        }\r\n      } else {\r\n        el.value = value;\r\n      }\r\n    }\r\n    return dom;\r\n  }\r\n  // Transforms\r\n  // eslint-disable-next-line\r\n  function transform(transform) {\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      var elStyle = this[i].style;\r\n      elStyle.webkitTransform = transform;\r\n      elStyle.transform = transform;\r\n    }\r\n    return this;\r\n  }\r\n  function transition(duration) {\r\n    if (typeof duration !== 'string') {\r\n      duration = duration + \"ms\"; // eslint-disable-line\r\n    }\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      var elStyle = this[i].style;\r\n      elStyle.webkitTransitionDuration = duration;\r\n      elStyle.transitionDuration = duration;\r\n    }\r\n    return this;\r\n  }\r\n  // Events\r\n  function on() {\r\n    var assign;\r\n\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n    var eventType = args[0];\r\n    var targetSelector = args[1];\r\n    var listener = args[2];\r\n    var capture = args[3];\r\n    if (typeof args[1] === 'function') {\r\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\r\n      targetSelector = undefined;\r\n    }\r\n    if (!capture) { capture = false; }\r\n\r\n    function handleLiveEvent(e) {\r\n      var target = e.target;\r\n      if (!target) { return; }\r\n      var eventData = e.target.dom7EventData || [];\r\n      if (eventData.indexOf(e) < 0) {\r\n        eventData.unshift(e);\r\n      }\r\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\r\n      else {\r\n        var parents = $(target).parents(); // eslint-disable-line\r\n        for (var k = 0; k < parents.length; k += 1) {\r\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\r\n        }\r\n      }\r\n    }\r\n    function handleEvent(e) {\r\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\r\n      if (eventData.indexOf(e) < 0) {\r\n        eventData.unshift(e);\r\n      }\r\n      listener.apply(this, eventData);\r\n    }\r\n    var events = eventType.split(' ');\r\n    var j;\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      var el = this[i];\r\n      if (!targetSelector) {\r\n        for (j = 0; j < events.length; j += 1) {\r\n          var event = events[j];\r\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\r\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\r\n          el.dom7Listeners[event].push({\r\n            listener: listener,\r\n            proxyListener: handleEvent,\r\n          });\r\n          el.addEventListener(event, handleEvent, capture);\r\n        }\r\n      } else {\r\n        // Live events\r\n        for (j = 0; j < events.length; j += 1) {\r\n          var event$1 = events[j];\r\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\r\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\r\n          el.dom7LiveListeners[event$1].push({\r\n            listener: listener,\r\n            proxyListener: handleLiveEvent,\r\n          });\r\n          el.addEventListener(event$1, handleLiveEvent, capture);\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  function off() {\r\n    var assign;\r\n\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n    var eventType = args[0];\r\n    var targetSelector = args[1];\r\n    var listener = args[2];\r\n    var capture = args[3];\r\n    if (typeof args[1] === 'function') {\r\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\r\n      targetSelector = undefined;\r\n    }\r\n    if (!capture) { capture = false; }\r\n\r\n    var events = eventType.split(' ');\r\n    for (var i = 0; i < events.length; i += 1) {\r\n      var event = events[i];\r\n      for (var j = 0; j < this.length; j += 1) {\r\n        var el = this[j];\r\n        var handlers = (void 0);\r\n        if (!targetSelector && el.dom7Listeners) {\r\n          handlers = el.dom7Listeners[event];\r\n        } else if (targetSelector && el.dom7LiveListeners) {\r\n          handlers = el.dom7LiveListeners[event];\r\n        }\r\n        if (handlers && handlers.length) {\r\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\r\n            var handler = handlers[k];\r\n            if (listener && handler.listener === listener) {\r\n              el.removeEventListener(event, handler.proxyListener, capture);\r\n              handlers.splice(k, 1);\r\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\r\n              el.removeEventListener(event, handler.proxyListener, capture);\r\n              handlers.splice(k, 1);\r\n            } else if (!listener) {\r\n              el.removeEventListener(event, handler.proxyListener, capture);\r\n              handlers.splice(k, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  function once() {\r\n    var assign;\r\n\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n    var dom = this;\r\n    var eventName = args[0];\r\n    var targetSelector = args[1];\r\n    var listener = args[2];\r\n    var capture = args[3];\r\n    if (typeof args[1] === 'function') {\r\n      (assign = args, eventName = assign[0], listener = assign[1], capture = assign[2]);\r\n      targetSelector = undefined;\r\n    }\r\n    function onceHandler() {\r\n      var eventArgs = [], len = arguments.length;\r\n      while ( len-- ) eventArgs[ len ] = arguments[ len ];\r\n\r\n      listener.apply(this, eventArgs);\r\n      dom.off(eventName, targetSelector, onceHandler, capture);\r\n      if (onceHandler.dom7proxy) {\r\n        delete onceHandler.dom7proxy;\r\n      }\r\n    }\r\n    onceHandler.dom7proxy = listener;\r\n    return dom.on(eventName, targetSelector, onceHandler, capture);\r\n  }\r\n  function trigger() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    var events = args[0].split(' ');\r\n    var eventData = args[1];\r\n    for (var i = 0; i < events.length; i += 1) {\r\n      var event = events[i];\r\n      for (var j = 0; j < this.length; j += 1) {\r\n        var el = this[j];\r\n        var evt = (void 0);\r\n        try {\r\n          evt = new win.CustomEvent(event, {\r\n            detail: eventData,\r\n            bubbles: true,\r\n            cancelable: true,\r\n          });\r\n        } catch (e) {\r\n          evt = doc.createEvent('Event');\r\n          evt.initEvent(event, true, true);\r\n          evt.detail = eventData;\r\n        }\r\n        // eslint-disable-next-line\r\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\r\n        el.dispatchEvent(evt);\r\n        el.dom7EventData = [];\r\n        delete el.dom7EventData;\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  function transitionEnd(callback) {\r\n    var events = ['webkitTransitionEnd', 'transitionend'];\r\n    var dom = this;\r\n    var i;\r\n    function fireCallBack(e) {\r\n      /* jshint validthis:true */\r\n      if (e.target !== this) { return; }\r\n      callback.call(this, e);\r\n      for (i = 0; i < events.length; i += 1) {\r\n        dom.off(events[i], fireCallBack);\r\n      }\r\n    }\r\n    if (callback) {\r\n      for (i = 0; i < events.length; i += 1) {\r\n        dom.on(events[i], fireCallBack);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  function animationEnd(callback) {\r\n    var events = ['webkitAnimationEnd', 'animationend'];\r\n    var dom = this;\r\n    var i;\r\n    function fireCallBack(e) {\r\n      if (e.target !== this) { return; }\r\n      callback.call(this, e);\r\n      for (i = 0; i < events.length; i += 1) {\r\n        dom.off(events[i], fireCallBack);\r\n      }\r\n    }\r\n    if (callback) {\r\n      for (i = 0; i < events.length; i += 1) {\r\n        dom.on(events[i], fireCallBack);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  // Sizing/Styles\r\n  function width() {\r\n    if (this[0] === win) {\r\n      return win.innerWidth;\r\n    }\r\n\r\n    if (this.length > 0) {\r\n      return parseFloat(this.css('width'));\r\n    }\r\n\r\n    return null;\r\n  }\r\n  function outerWidth(includeMargins) {\r\n    if (this.length > 0) {\r\n      if (includeMargins) {\r\n        // eslint-disable-next-line\r\n        var styles = this.styles();\r\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\r\n      }\r\n      return this[0].offsetWidth;\r\n    }\r\n    return null;\r\n  }\r\n  function height() {\r\n    if (this[0] === win) {\r\n      return win.innerHeight;\r\n    }\r\n\r\n    if (this.length > 0) {\r\n      return parseFloat(this.css('height'));\r\n    }\r\n\r\n    return null;\r\n  }\r\n  function outerHeight(includeMargins) {\r\n    if (this.length > 0) {\r\n      if (includeMargins) {\r\n        // eslint-disable-next-line\r\n        var styles = this.styles();\r\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\r\n      }\r\n      return this[0].offsetHeight;\r\n    }\r\n    return null;\r\n  }\r\n  function offset() {\r\n    if (this.length > 0) {\r\n      var el = this[0];\r\n      var box = el.getBoundingClientRect();\r\n      var body = doc.body;\r\n      var clientTop = el.clientTop || body.clientTop || 0;\r\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\r\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\r\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\r\n      return {\r\n        top: (box.top + scrollTop) - clientTop,\r\n        left: (box.left + scrollLeft) - clientLeft,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n  function hide() {\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      this[i].style.display = 'none';\r\n    }\r\n    return this;\r\n  }\r\n  function show() {\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      var el = this[i];\r\n      if (el.style.display === 'none') {\r\n        el.style.display = '';\r\n      }\r\n      if (win.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\r\n        // Still not visible\r\n        el.style.display = 'block';\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  function styles() {\r\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\r\n    return {};\r\n  }\r\n  function css(props, value) {\r\n    var i;\r\n    if (arguments.length === 1) {\r\n      if (typeof props === 'string') {\r\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\r\n      } else {\r\n        for (i = 0; i < this.length; i += 1) {\r\n          // eslint-disable-next-line\r\n          for (var prop in props) {\r\n            this[i].style[prop] = props[prop];\r\n          }\r\n        }\r\n        return this;\r\n      }\r\n    }\r\n    if (arguments.length === 2 && typeof props === 'string') {\r\n      for (i = 0; i < this.length; i += 1) {\r\n        this[i].style[props] = value;\r\n      }\r\n      return this;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // Dom manipulation\r\n  function toArray() {\r\n    var arr = [];\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      arr.push(this[i]);\r\n    }\r\n    return arr;\r\n  }\r\n  // Iterate over the collection passing elements to `callback`\r\n  function each(callback) {\r\n    // Don't bother continuing without a callback\r\n    if (!callback) { return this; }\r\n    // Iterate over the current collection\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      // If the callback returns false\r\n      if (callback.call(this[i], i, this[i]) === false) {\r\n        // End the loop early\r\n        return this;\r\n      }\r\n    }\r\n    // Return `this` to allow chained DOM operations\r\n    return this;\r\n  }\r\n  function forEach(callback) {\r\n    // Don't bother continuing without a callback\r\n    if (!callback) { return this; }\r\n    // Iterate over the current collection\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      // If the callback returns false\r\n      if (callback.call(this[i], this[i], i) === false) {\r\n        // End the loop early\r\n        return this;\r\n      }\r\n    }\r\n    // Return `this` to allow chained DOM operations\r\n    return this;\r\n  }\r\n  function filter(callback) {\r\n    var matchedItems = [];\r\n    var dom = this;\r\n    for (var i = 0; i < dom.length; i += 1) {\r\n      if (callback.call(dom[i], i, dom[i])) { matchedItems.push(dom[i]); }\r\n    }\r\n    return new Dom7(matchedItems);\r\n  }\r\n  function map(callback) {\r\n    var modifiedItems = [];\r\n    var dom = this;\r\n    for (var i = 0; i < dom.length; i += 1) {\r\n      modifiedItems.push(callback.call(dom[i], i, dom[i]));\r\n    }\r\n    return new Dom7(modifiedItems);\r\n  }\r\n  // eslint-disable-next-line\r\n  function html(html) {\r\n    if (typeof html === 'undefined') {\r\n      return this[0] ? this[0].innerHTML : undefined;\r\n    }\r\n\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      this[i].innerHTML = html;\r\n    }\r\n    return this;\r\n  }\r\n  // eslint-disable-next-line\r\n  function text(text) {\r\n    if (typeof text === 'undefined') {\r\n      if (this[0]) {\r\n        return this[0].textContent.trim();\r\n      }\r\n      return null;\r\n    }\r\n\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      this[i].textContent = text;\r\n    }\r\n    return this;\r\n  }\r\n  function is(selector) {\r\n    var el = this[0];\r\n    var compareWith;\r\n    var i;\r\n    if (!el || typeof selector === 'undefined') { return false; }\r\n    if (typeof selector === 'string') {\r\n      if (el.matches) { return el.matches(selector); }\r\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\r\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\r\n\r\n      compareWith = $(selector);\r\n      for (i = 0; i < compareWith.length; i += 1) {\r\n        if (compareWith[i] === el) { return true; }\r\n      }\r\n      return false;\r\n    } else if (selector === doc) { return el === doc; }\r\n    else if (selector === win) { return el === win; }\r\n\r\n    if (selector.nodeType || selector instanceof Dom7) {\r\n      compareWith = selector.nodeType ? [selector] : selector;\r\n      for (i = 0; i < compareWith.length; i += 1) {\r\n        if (compareWith[i] === el) { return true; }\r\n      }\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n  function indexOf(el) {\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      if (this[i] === el) { return i; }\r\n    }\r\n    return -1;\r\n  }\r\n  function index() {\r\n    var child = this[0];\r\n    var i;\r\n    if (child) {\r\n      i = 0;\r\n      // eslint-disable-next-line\r\n      while ((child = child.previousSibling) !== null) {\r\n        if (child.nodeType === 1) { i += 1; }\r\n      }\r\n      return i;\r\n    }\r\n    return undefined;\r\n  }\r\n  // eslint-disable-next-line\r\n  function eq(index) {\r\n    if (typeof index === 'undefined') { return this; }\r\n    var length = this.length;\r\n    var returnIndex;\r\n    if (index > length - 1) {\r\n      return new Dom7([]);\r\n    }\r\n    if (index < 0) {\r\n      returnIndex = length + index;\r\n      if (returnIndex < 0) { return new Dom7([]); }\r\n      return new Dom7([this[returnIndex]]);\r\n    }\r\n    return new Dom7([this[index]]);\r\n  }\r\n  function append() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    var newChild;\r\n\r\n    for (var k = 0; k < args.length; k += 1) {\r\n      newChild = args[k];\r\n      for (var i = 0; i < this.length; i += 1) {\r\n        if (typeof newChild === 'string') {\r\n          var tempDiv = doc.createElement('div');\r\n          tempDiv.innerHTML = newChild;\r\n          while (tempDiv.firstChild) {\r\n            this[i].appendChild(tempDiv.firstChild);\r\n          }\r\n        } else if (newChild instanceof Dom7) {\r\n          for (var j = 0; j < newChild.length; j += 1) {\r\n            this[i].appendChild(newChild[j]);\r\n          }\r\n        } else {\r\n          this[i].appendChild(newChild);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n  // eslint-disable-next-line\r\n  function appendTo(parent) {\r\n    $(parent).append(this);\r\n    return this;\r\n  }\r\n  function prepend(newChild) {\r\n    var i;\r\n    var j;\r\n    for (i = 0; i < this.length; i += 1) {\r\n      if (typeof newChild === 'string') {\r\n        var tempDiv = doc.createElement('div');\r\n        tempDiv.innerHTML = newChild;\r\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\r\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\r\n        }\r\n      } else if (newChild instanceof Dom7) {\r\n        for (j = 0; j < newChild.length; j += 1) {\r\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\r\n        }\r\n      } else {\r\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  // eslint-disable-next-line\r\n  function prependTo(parent) {\r\n    $(parent).prepend(this);\r\n    return this;\r\n  }\r\n  function insertBefore(selector) {\r\n    var before = $(selector);\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      if (before.length === 1) {\r\n        before[0].parentNode.insertBefore(this[i], before[0]);\r\n      } else if (before.length > 1) {\r\n        for (var j = 0; j < before.length; j += 1) {\r\n          before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  function insertAfter(selector) {\r\n    var after = $(selector);\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      if (after.length === 1) {\r\n        after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\r\n      } else if (after.length > 1) {\r\n        for (var j = 0; j < after.length; j += 1) {\r\n          after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  function next(selector) {\r\n    if (this.length > 0) {\r\n      if (selector) {\r\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\r\n          return new Dom7([this[0].nextElementSibling]);\r\n        }\r\n        return new Dom7([]);\r\n      }\r\n\r\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\r\n      return new Dom7([]);\r\n    }\r\n    return new Dom7([]);\r\n  }\r\n  function nextAll(selector) {\r\n    var nextEls = [];\r\n    var el = this[0];\r\n    if (!el) { return new Dom7([]); }\r\n    while (el.nextElementSibling) {\r\n      var next = el.nextElementSibling; // eslint-disable-line\r\n      if (selector) {\r\n        if ($(next).is(selector)) { nextEls.push(next); }\r\n      } else { nextEls.push(next); }\r\n      el = next;\r\n    }\r\n    return new Dom7(nextEls);\r\n  }\r\n  function prev(selector) {\r\n    if (this.length > 0) {\r\n      var el = this[0];\r\n      if (selector) {\r\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\r\n          return new Dom7([el.previousElementSibling]);\r\n        }\r\n        return new Dom7([]);\r\n      }\r\n\r\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\r\n      return new Dom7([]);\r\n    }\r\n    return new Dom7([]);\r\n  }\r\n  function prevAll(selector) {\r\n    var prevEls = [];\r\n    var el = this[0];\r\n    if (!el) { return new Dom7([]); }\r\n    while (el.previousElementSibling) {\r\n      var prev = el.previousElementSibling; // eslint-disable-line\r\n      if (selector) {\r\n        if ($(prev).is(selector)) { prevEls.push(prev); }\r\n      } else { prevEls.push(prev); }\r\n      el = prev;\r\n    }\r\n    return new Dom7(prevEls);\r\n  }\r\n  function siblings(selector) {\r\n    return this.nextAll(selector).add(this.prevAll(selector));\r\n  }\r\n  function parent(selector) {\r\n    var parents = []; // eslint-disable-line\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      if (this[i].parentNode !== null) {\r\n        if (selector) {\r\n          if ($(this[i].parentNode).is(selector)) { parents.push(this[i].parentNode); }\r\n        } else {\r\n          parents.push(this[i].parentNode);\r\n        }\r\n      }\r\n    }\r\n    return $(unique(parents));\r\n  }\r\n  function parents(selector) {\r\n    var parents = []; // eslint-disable-line\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      var parent = this[i].parentNode; // eslint-disable-line\r\n      while (parent) {\r\n        if (selector) {\r\n          if ($(parent).is(selector)) { parents.push(parent); }\r\n        } else {\r\n          parents.push(parent);\r\n        }\r\n        parent = parent.parentNode;\r\n      }\r\n    }\r\n    return $(unique(parents));\r\n  }\r\n  function closest(selector) {\r\n    var closest = this; // eslint-disable-line\r\n    if (typeof selector === 'undefined') {\r\n      return new Dom7([]);\r\n    }\r\n    if (!closest.is(selector)) {\r\n      closest = closest.parents(selector).eq(0);\r\n    }\r\n    return closest;\r\n  }\r\n  function find(selector) {\r\n    var foundElements = [];\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      var found = this[i].querySelectorAll(selector);\r\n      for (var j = 0; j < found.length; j += 1) {\r\n        foundElements.push(found[j]);\r\n      }\r\n    }\r\n    return new Dom7(foundElements);\r\n  }\r\n  function children(selector) {\r\n    var children = []; // eslint-disable-line\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      var childNodes = this[i].childNodes;\r\n\r\n      for (var j = 0; j < childNodes.length; j += 1) {\r\n        if (!selector) {\r\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\r\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\r\n          children.push(childNodes[j]);\r\n        }\r\n      }\r\n    }\r\n    return new Dom7(unique(children));\r\n  }\r\n  function remove() {\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      if (this[i].parentNode) { this[i].parentNode.removeChild(this[i]); }\r\n    }\r\n    return this;\r\n  }\r\n  function detach() {\r\n    return this.remove();\r\n  }\r\n  function add() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    var dom = this;\r\n    var i;\r\n    var j;\r\n    for (i = 0; i < args.length; i += 1) {\r\n      var toAdd = $(args[i]);\r\n      for (j = 0; j < toAdd.length; j += 1) {\r\n        dom[dom.length] = toAdd[j];\r\n        dom.length += 1;\r\n      }\r\n    }\r\n    return dom;\r\n  }\r\n  function empty() {\r\n    for (var i = 0; i < this.length; i += 1) {\r\n      var el = this[i];\r\n      if (el.nodeType === 1) {\r\n        for (var j = 0; j < el.childNodes.length; j += 1) {\r\n          if (el.childNodes[j].parentNode) {\r\n            el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\r\n          }\r\n        }\r\n        el.textContent = '';\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  var Methods = /*#__PURE__*/Object.freeze({\r\n    addClass: addClass,\r\n    removeClass: removeClass,\r\n    hasClass: hasClass,\r\n    toggleClass: toggleClass,\r\n    attr: attr,\r\n    removeAttr: removeAttr,\r\n    prop: prop,\r\n    data: data,\r\n    removeData: removeData,\r\n    dataset: dataset,\r\n    val: val,\r\n    transform: transform,\r\n    transition: transition,\r\n    on: on,\r\n    off: off,\r\n    once: once,\r\n    trigger: trigger,\r\n    transitionEnd: transitionEnd,\r\n    animationEnd: animationEnd,\r\n    width: width,\r\n    outerWidth: outerWidth,\r\n    height: height,\r\n    outerHeight: outerHeight,\r\n    offset: offset,\r\n    hide: hide,\r\n    show: show,\r\n    styles: styles,\r\n    css: css,\r\n    toArray: toArray,\r\n    each: each,\r\n    forEach: forEach,\r\n    filter: filter,\r\n    map: map,\r\n    html: html,\r\n    text: text,\r\n    is: is,\r\n    indexOf: indexOf,\r\n    index: index,\r\n    eq: eq,\r\n    append: append,\r\n    appendTo: appendTo,\r\n    prepend: prepend,\r\n    prependTo: prependTo,\r\n    insertBefore: insertBefore,\r\n    insertAfter: insertAfter,\r\n    next: next,\r\n    nextAll: nextAll,\r\n    prev: prev,\r\n    prevAll: prevAll,\r\n    siblings: siblings,\r\n    parent: parent,\r\n    parents: parents,\r\n    closest: closest,\r\n    find: find,\r\n    children: children,\r\n    remove: remove,\r\n    detach: detach,\r\n    add: add,\r\n    empty: empty\r\n  });\r\n\r\n  function scrollTo() {\r\n    var assign;\r\n\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n    var left = args[0];\r\n    var top = args[1];\r\n    var duration = args[2];\r\n    var easing = args[3];\r\n    var callback = args[4];\r\n    if (args.length === 4 && typeof easing === 'function') {\r\n      callback = easing;\r\n      (assign = args, left = assign[0], top = assign[1], duration = assign[2], callback = assign[3], easing = assign[4]);\r\n    }\r\n    if (typeof easing === 'undefined') { easing = 'swing'; }\r\n\r\n    return this.each(function animate() {\r\n      var el = this;\r\n      var currentTop;\r\n      var currentLeft;\r\n      var maxTop;\r\n      var maxLeft;\r\n      var newTop;\r\n      var newLeft;\r\n      var scrollTop; // eslint-disable-line\r\n      var scrollLeft; // eslint-disable-line\r\n      var animateTop = top > 0 || top === 0;\r\n      var animateLeft = left > 0 || left === 0;\r\n      if (typeof easing === 'undefined') {\r\n        easing = 'swing';\r\n      }\r\n      if (animateTop) {\r\n        currentTop = el.scrollTop;\r\n        if (!duration) {\r\n          el.scrollTop = top;\r\n        }\r\n      }\r\n      if (animateLeft) {\r\n        currentLeft = el.scrollLeft;\r\n        if (!duration) {\r\n          el.scrollLeft = left;\r\n        }\r\n      }\r\n      if (!duration) { return; }\r\n      if (animateTop) {\r\n        maxTop = el.scrollHeight - el.offsetHeight;\r\n        newTop = Math.max(Math.min(top, maxTop), 0);\r\n      }\r\n      if (animateLeft) {\r\n        maxLeft = el.scrollWidth - el.offsetWidth;\r\n        newLeft = Math.max(Math.min(left, maxLeft), 0);\r\n      }\r\n      var startTime = null;\r\n      if (animateTop && newTop === currentTop) { animateTop = false; }\r\n      if (animateLeft && newLeft === currentLeft) { animateLeft = false; }\r\n      function render(time) {\r\n        if ( time === void 0 ) time = new Date().getTime();\r\n\r\n        if (startTime === null) {\r\n          startTime = time;\r\n        }\r\n        var progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\r\n        var easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\r\n        var done;\r\n        if (animateTop) { scrollTop = currentTop + (easeProgress * (newTop - currentTop)); }\r\n        if (animateLeft) { scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft)); }\r\n        if (animateTop && newTop > currentTop && scrollTop >= newTop) {\r\n          el.scrollTop = newTop;\r\n          done = true;\r\n        }\r\n        if (animateTop && newTop < currentTop && scrollTop <= newTop) {\r\n          el.scrollTop = newTop;\r\n          done = true;\r\n        }\r\n        if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\r\n          el.scrollLeft = newLeft;\r\n          done = true;\r\n        }\r\n        if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\r\n          el.scrollLeft = newLeft;\r\n          done = true;\r\n        }\r\n\r\n        if (done) {\r\n          if (callback) { callback(); }\r\n          return;\r\n        }\r\n        if (animateTop) { el.scrollTop = scrollTop; }\r\n        if (animateLeft) { el.scrollLeft = scrollLeft; }\r\n        requestAnimationFrame(render);\r\n      }\r\n      requestAnimationFrame(render);\r\n    });\r\n  }\r\n  // scrollTop(top, duration, easing, callback) {\r\n  function scrollTop() {\r\n    var assign;\r\n\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n    var top = args[0];\r\n    var duration = args[1];\r\n    var easing = args[2];\r\n    var callback = args[3];\r\n    if (args.length === 3 && typeof easing === 'function') {\r\n      (assign = args, top = assign[0], duration = assign[1], callback = assign[2], easing = assign[3]);\r\n    }\r\n    var dom = this;\r\n    if (typeof top === 'undefined') {\r\n      if (dom.length > 0) { return dom[0].scrollTop; }\r\n      return null;\r\n    }\r\n    return dom.scrollTo(undefined, top, duration, easing, callback);\r\n  }\r\n  function scrollLeft() {\r\n    var assign;\r\n\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n    var left = args[0];\r\n    var duration = args[1];\r\n    var easing = args[2];\r\n    var callback = args[3];\r\n    if (args.length === 3 && typeof easing === 'function') {\r\n      (assign = args, left = assign[0], duration = assign[1], callback = assign[2], easing = assign[3]);\r\n    }\r\n    var dom = this;\r\n    if (typeof left === 'undefined') {\r\n      if (dom.length > 0) { return dom[0].scrollLeft; }\r\n      return null;\r\n    }\r\n    return dom.scrollTo(left, undefined, duration, easing, callback);\r\n  }\r\n\r\n  var Scroll = /*#__PURE__*/Object.freeze({\r\n    scrollTo: scrollTo,\r\n    scrollTop: scrollTop,\r\n    scrollLeft: scrollLeft\r\n  });\r\n\r\n  function animate(initialProps, initialParams) {\r\n    var els = this;\r\n    var a = {\r\n      props: Object.assign({}, initialProps),\r\n      params: Object.assign({\r\n        duration: 300,\r\n        easing: 'swing', // or 'linear'\r\n        /* Callbacks\r\n        begin(elements)\r\n        complete(elements)\r\n        progress(elements, complete, remaining, start, tweenValue)\r\n        */\r\n      }, initialParams),\r\n\r\n      elements: els,\r\n      animating: false,\r\n      que: [],\r\n\r\n      easingProgress: function easingProgress(easing, progress) {\r\n        if (easing === 'swing') {\r\n          return 0.5 - (Math.cos(progress * Math.PI) / 2);\r\n        }\r\n        if (typeof easing === 'function') {\r\n          return easing(progress);\r\n        }\r\n        return progress;\r\n      },\r\n      stop: function stop() {\r\n        if (a.frameId) {\r\n          cancelAnimationFrame(a.frameId);\r\n        }\r\n        a.animating = false;\r\n        a.elements.each(function (index, el) {\r\n          var element = el;\r\n          delete element.dom7AnimateInstance;\r\n        });\r\n        a.que = [];\r\n      },\r\n      done: function done(complete) {\r\n        a.animating = false;\r\n        a.elements.each(function (index, el) {\r\n          var element = el;\r\n          delete element.dom7AnimateInstance;\r\n        });\r\n        if (complete) { complete(els); }\r\n        if (a.que.length > 0) {\r\n          var que = a.que.shift();\r\n          a.animate(que[0], que[1]);\r\n        }\r\n      },\r\n      animate: function animate(props, params) {\r\n        if (a.animating) {\r\n          a.que.push([props, params]);\r\n          return a;\r\n        }\r\n        var elements = [];\r\n\r\n        // Define & Cache Initials & Units\r\n        a.elements.each(function (index, el) {\r\n          var initialFullValue;\r\n          var initialValue;\r\n          var unit;\r\n          var finalValue;\r\n          var finalFullValue;\r\n\r\n          if (!el.dom7AnimateInstance) { a.elements[index].dom7AnimateInstance = a; }\r\n\r\n          elements[index] = {\r\n            container: el,\r\n          };\r\n          Object.keys(props).forEach(function (prop) {\r\n            initialFullValue = win.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\r\n            initialValue = parseFloat(initialFullValue);\r\n            unit = initialFullValue.replace(initialValue, '');\r\n            finalValue = parseFloat(props[prop]);\r\n            finalFullValue = props[prop] + unit;\r\n            elements[index][prop] = {\r\n              initialFullValue: initialFullValue,\r\n              initialValue: initialValue,\r\n              unit: unit,\r\n              finalValue: finalValue,\r\n              finalFullValue: finalFullValue,\r\n              currentValue: initialValue,\r\n            };\r\n          });\r\n        });\r\n\r\n        var startTime = null;\r\n        var time;\r\n        var elementsDone = 0;\r\n        var propsDone = 0;\r\n        var done;\r\n        var began = false;\r\n\r\n        a.animating = true;\r\n\r\n        function render() {\r\n          time = new Date().getTime();\r\n          var progress;\r\n          var easeProgress;\r\n          // let el;\r\n          if (!began) {\r\n            began = true;\r\n            if (params.begin) { params.begin(els); }\r\n          }\r\n          if (startTime === null) {\r\n            startTime = time;\r\n          }\r\n          if (params.progress) {\r\n            // eslint-disable-next-line\r\n            params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\r\n          }\r\n\r\n          elements.forEach(function (element) {\r\n            var el = element;\r\n            if (done || el.done) { return; }\r\n            Object.keys(props).forEach(function (prop) {\r\n              if (done || el.done) { return; }\r\n              progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\r\n              easeProgress = a.easingProgress(params.easing, progress);\r\n              var ref = el[prop];\r\n              var initialValue = ref.initialValue;\r\n              var finalValue = ref.finalValue;\r\n              var unit = ref.unit;\r\n              el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\r\n              var currentValue = el[prop].currentValue;\r\n\r\n              if (\r\n                (finalValue > initialValue && currentValue >= finalValue) ||\r\n                (finalValue < initialValue && currentValue <= finalValue)) {\r\n                el.container.style[prop] = finalValue + unit;\r\n                propsDone += 1;\r\n                if (propsDone === Object.keys(props).length) {\r\n                  el.done = true;\r\n                  elementsDone += 1;\r\n                }\r\n                if (elementsDone === elements.length) {\r\n                  done = true;\r\n                }\r\n              }\r\n              if (done) {\r\n                a.done(params.complete);\r\n                return;\r\n              }\r\n              el.container.style[prop] = currentValue + unit;\r\n            });\r\n          });\r\n          if (done) { return; }\r\n          // Then call\r\n          a.frameId = requestAnimationFrame(render);\r\n        }\r\n        a.frameId = requestAnimationFrame(render);\r\n        return a;\r\n      },\r\n    };\r\n\r\n    if (a.elements.length === 0) {\r\n      return els;\r\n    }\r\n\r\n    var animateInstance;\r\n    for (var i = 0; i < a.elements.length; i += 1) {\r\n      if (a.elements[i].dom7AnimateInstance) {\r\n        animateInstance = a.elements[i].dom7AnimateInstance;\r\n      } else { a.elements[i].dom7AnimateInstance = a; }\r\n    }\r\n    if (!animateInstance) {\r\n      animateInstance = a;\r\n    }\r\n\r\n    if (initialProps === 'stop') {\r\n      animateInstance.stop();\r\n    } else {\r\n      animateInstance.animate(a.props, a.params);\r\n    }\r\n\r\n    return els;\r\n  }\r\n\r\n  function stop() {\r\n    var els = this;\r\n    for (var i = 0; i < els.length; i += 1) {\r\n      if (els[i].dom7AnimateInstance) {\r\n        els[i].dom7AnimateInstance.stop();\r\n      }\r\n    }\r\n  }\r\n\r\n  var Animate = /*#__PURE__*/Object.freeze({\r\n    animate: animate,\r\n    stop: stop\r\n  });\r\n\r\n  var noTrigger = ('resize scroll').split(' ');\r\n  function eventShortcut(name) {\r\n    var ref;\r\n\r\n    var args = [], len = arguments.length - 1;\r\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\r\n    if (typeof args[0] === 'undefined') {\r\n      for (var i = 0; i < this.length; i += 1) {\r\n        if (noTrigger.indexOf(name) < 0) {\r\n          if (name in this[i]) { this[i][name](); }\r\n          else {\r\n            $(this[i]).trigger(name);\r\n          }\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n    return (ref = this).on.apply(ref, [ name ].concat( args ));\r\n  }\r\n\r\n  function click() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'click' ].concat( args ));\r\n  }\r\n  function blur() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'blur' ].concat( args ));\r\n  }\r\n  function focus() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'focus' ].concat( args ));\r\n  }\r\n  function focusin() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'focusin' ].concat( args ));\r\n  }\r\n  function focusout() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'focusout' ].concat( args ));\r\n  }\r\n  function keyup() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'keyup' ].concat( args ));\r\n  }\r\n  function keydown() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'keydown' ].concat( args ));\r\n  }\r\n  function keypress() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'keypress' ].concat( args ));\r\n  }\r\n  function submit() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'submit' ].concat( args ));\r\n  }\r\n  function change() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'change' ].concat( args ));\r\n  }\r\n  function mousedown() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'mousedown' ].concat( args ));\r\n  }\r\n  function mousemove() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'mousemove' ].concat( args ));\r\n  }\r\n  function mouseup() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'mouseup' ].concat( args ));\r\n  }\r\n  function mouseenter() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'mouseenter' ].concat( args ));\r\n  }\r\n  function mouseleave() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'mouseleave' ].concat( args ));\r\n  }\r\n  function mouseout() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'mouseout' ].concat( args ));\r\n  }\r\n  function mouseover() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'mouseover' ].concat( args ));\r\n  }\r\n  function touchstart() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'touchstart' ].concat( args ));\r\n  }\r\n  function touchend() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'touchend' ].concat( args ));\r\n  }\r\n  function touchmove() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'touchmove' ].concat( args ));\r\n  }\r\n  function resize() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'resize' ].concat( args ));\r\n  }\r\n  function scroll() {\r\n    var args = [], len = arguments.length;\r\n    while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    return eventShortcut.bind(this).apply(void 0, [ 'scroll' ].concat( args ));\r\n  }\r\n\r\n  var eventShortcuts = /*#__PURE__*/Object.freeze({\r\n    click: click,\r\n    blur: blur,\r\n    focus: focus,\r\n    focusin: focusin,\r\n    focusout: focusout,\r\n    keyup: keyup,\r\n    keydown: keydown,\r\n    keypress: keypress,\r\n    submit: submit,\r\n    change: change,\r\n    mousedown: mousedown,\r\n    mousemove: mousemove,\r\n    mouseup: mouseup,\r\n    mouseenter: mouseenter,\r\n    mouseleave: mouseleave,\r\n    mouseout: mouseout,\r\n    mouseover: mouseover,\r\n    touchstart: touchstart,\r\n    touchend: touchend,\r\n    touchmove: touchmove,\r\n    resize: resize,\r\n    scroll: scroll\r\n  });\r\n\r\n  [Methods, Scroll, Animate, eventShortcuts].forEach(function (group) {\r\n    Object.keys(group).forEach(function (methodName) {\r\n      $.fn[methodName] = group[methodName];\r\n    });\r\n  });\r\n\r\n  return $;\r\n\r\n}));\r\n"]}